
  >>> self.setRoles(['Manager'])
  >>> from Products.Archetypes.tests.utils import makeContent
  >>> context = makeContent(self.folder, portal_type='RefBrowserDemo', id='ref')
  >>> doc1 = makeContent(self.folder, portal_type='Document', id='doc1')
  >>> doc2 = makeContent(self.portal, portal_type='Document', id='doc2')

  >>> context.setMultiRef(doc1.UID())
  >>> context.reindexObject()

  >>> from Products.PloneTestCase.setup import default_user
  >>> from Products.PloneTestCase.setup import default_password
  >>> membership = self.portal.portal_membership
  >>> membership.addMember('fred', default_password, [], [])
  >>> fred = membership.getMemberById('fred')

We want to test for doc1 and doc2 in the browser output later, so we turn off
both portlet columns, since they will contain references to both at all times
(i.e. the navigation portlet, recent items etc.)

  >>> from zope.component import getMultiAdapter, getUtility
  >>> from plone.portlets.interfaces import IPortletManager
  >>> from plone.portlets.interfaces import IPortletAssignmentMapping

  >>> left_column = getUtility(IPortletManager, name=u"plone.leftcolumn")
  >>> left_assignable = getMultiAdapter((self.portal, left_column), IPortletAssignmentMapping)
  >>> for name in left_assignable.keys():
  ...     del left_assignable[name]

  >>> right_column = getUtility(IPortletManager, name=u"plone.rightcolumn")
  >>> right_assignable = getMultiAdapter((self.portal, right_column), IPortletAssignmentMapping)
  >>> for name in right_assignable.keys():
  ...     del right_assignable[name]

  >>> from Products.Five.testbrowser import Browser
  >>> browser = Browser()
  >>> browser.addHeader('Authorization', 'Basic %s:%s' % ('fred', default_password))
  >>> browser.open(context.absolute_url())
  >>> browser.url
  'http://nohost/plone/acl_users/credentials_cookie_auth/require_login?...'

  >>> self.folder.manage_setLocalRoles('fred', ('Authenticated', 'Reader', 'Member',))
  >>> self.folder.reindexObjectSecurity()
  >>> context.manage_setLocalRoles('fred', ('Authenticated', 'Reader',  'Member','Owner',))
  >>> context.reindexObjectSecurity()

  >>> browser.open(context.absolute_url() + "/edit")
  >>> browser.url
  'http://nohost/plone/Members/test_user_1_/ref/edit'

  >>> browser.getControl(name="multiRef:list").value == [doc1.UID()]
  True

  >>> 'doc1' in browser.contents
  True

  >>> 'doc2' in browser.contents
  False

  >>> context.setMultiRef((doc1.UID(), doc2.UID()))
  >>> context.reindexObject()

  >>> browser.open(context.absolute_url() + "/edit")
  >>> browser.getControl(name="multiRef:list").value == [doc1.UID(), doc2.UID()]
  True

  >>> 'doc1' in browser.contents
  True

  >>> 'doc2' in browser.contents
  False

  >>> 'Undisclosed' in browser.contents
  True

